---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 55.11.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
          smtp_from: "${MAILGUN_EMAIL}"
          smtp_smarthost: smtp.mailgun.org:587
          smtp_auth_username: "${MAILGUN_USER}"
          smtp_auth_password: "${MAILGUN_PASSWORD}"
        receivers:
          - name: "null"
          - name: "email"
            email_configs:
              - to: "${SECRET_EMAIL}"
                send_resolved: false
        route:
          group_by:
            - "alertname"
            - "job"
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "email"
          routes:
            - receiver: "null"
              matchers:
                - "alertname =~ InfoInhibitor|Watchdog"
            - receiver: "email"
              matchers:
                - "severity = critical"
              continue: true
        inhibit_rules:
          - source_matchers:
              - "severity = critical"
            target_matchers:
              - "severity = warning"
            equal:
              - "alertname"
              - "namespace"
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - &host "alertmanager.${SECRET_DOMAIN}"
        paths:
          - /
        pathType: Prefix
        tls:
          - secretName: alertmanager-tls
            hosts:
              - *host
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              storageClassName: openebs-zfspv-ssd
              resources:
                requests:
                  storage: 256Mi

    grafana:
      enabled: false
      forceDeployDashboards: true

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance

    kubeApiServer:
      enabled: true

    kubeControllerManager:
      enabled: true
      endpoints:
        - 10.10.0.10

    kubeEtcd:
      enabled: true
      endpoints:
        - 10.10.0.10
      service:
        enabled: true
        port: 2381

    kubeScheduler:
      enabled: true
      endpoints:
        - 10.10.0.10

    coreDns:
      enabled: true

    kubeProxy:
      enabled: false

    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node

    nodeExporter:
      enabled: true

    prometheusOperator:
      prometheusConfigReloader:
        resources: {}
      thanosImage:
        repository: quay.io/thanos/thanos
        tag: v0.33.0

    prometheus:
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        replicaExternalLabelName: __replica__
        externalLabels:
          cluster: home-ops
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              storageClassName: openebs-zfspv-ssd
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.33.0
          objectStorageConfig:
            name: thanos-objstore
            key: objstore.yml
        resources:
          requests:
            cpu: 10m
            memory: 2000Mi
          limits:
            memory: 8000Mi
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - &host "prometheus.${SECRET_DOMAIN}"
        paths:
          - /
        pathType: Prefix
        tls:
          - secretName: prometheus-tls
            hosts:
              - *host
