---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: thanos
      version: 12.20.1
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.33.0
    query:
      enabled: true
      replicaLabel:
        - __replica__
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        hostname: &host "thanos.${SECRET_DOMAIN}"
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        tls: true
        extraTls:
          - hosts:
              - *host
    existingObjstoreSecret: thanos-objstore
    queryFrontend:
      enabled: false
    bucketweb:
      enabled: true
    compactor:
      enabled: true
      persistence:
        enabled: false
    storegateway:
      enabled: true
      persistence:
        enabled: false
    ruler:
      enabled: true
      dnsDiscovery:
        enabled: true
      alertmanagers:
        - http://kube-prometheus-stack-alertmanager.monitoring:9093
      clusterName: home-ops
      extraFlags:
        - "--web.prefix-header=X-Forwarded-Prefix"
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      ingress:
        enabled: true
        hostname: &host "thanos-ruler.${SECRET_DOMAIN}"
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        tls: true
        extraTls:
          - hosts:
              - *host
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
